interactions:
- request:
    body: '{"messages":[{"role":"user","content":"Hi, output simple json"}],"model":"deepseek-ai/DeepSeek-R1","response_format":{"type":"json_object"}}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, br
      connection:
      - keep-alive
      content-length:
      - '140'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - AsyncOpenAI/Python 1.61.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.61.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.1
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: "{\n  \"id\": \"918c61327e8c67af\",\n  \"object\": \"chat.completion\",\n
        \ \"created\": 1740703409,\n  \"model\": \"deepseek-ai/DeepSeek-R1\",\n  \"prompt\":
        [],\n  \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n
        \       \"role\": \"assistant\",\n        \"content\": \"<think>\\nOkay, the
        user asked for a simple JSON output. Let me think about what's the best way
        to approach this.\\n\\nFirst, I need to make sure the JSON is valid and straightforward.
        Maybe they want an example, so a common structure like a person with some
        attributes would work.\\n\\nI should include a few key-value pairs. Let's
        see, maybe name, age, and some other details. Maybe include a nested object
        or an array to show different data types.\\n\\nWait, the user said \\\"simple,\\\"
        so maybe not too complicated. Let's keep it basic. A user object with name,
        age, and a list of hobbies. That's classic. Also, adding a boolean like isStudent
        could be helpful.\\n\\nLet me structure it. The top-level object, then keys
        with appropriate values. Make sure the syntax is correct: curly braces, commas
        between key-value pairs, quotes around strings. Hobbies as an array of strings,
        age as a number, isStudent as a boolean.\\n\\nChecking for any syntax errors.
        Let me write it out:\\n\\n{\\n  \\\"name\\\": \\\"John Doe\\\",\\n  \\\"age\\\":
        30,\\n  \\\"hobbies\\\": [\\\"reading\\\", \\\"cycling\\\", \\\"gaming\\\"],\\n
        \ \\\"isStudent\\\": false\\n}\\n\\nThat seems simple enough. It covers different
        data types and structures without being too complex. I think this should meet
        the user's request.\\n</think>\\n\\n```json\\n{\\n  \\\"name\\\": \\\"John
        Doe\\\",\\n  \\\"age\\\": 30,\\n  \\\"hobbies\\\": [\\\"reading\\\", \\\"cycling\\\",
        \\\"gaming\\\"],\\n  \\\"isStudent\\\": false\\n}\\n```\",\n        \"tool_calls\":
        []\n      },\n      \"logprobs\": null,\n      \"finish_reason\": \"stop\"\n
        \   }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 8,\n    \"total_tokens\":
        335,\n    \"completion_tokens\": 327\n  }\n}"
    headers:
      Access-Control-Allow-Origin:
      - '*'
      CF-Cache-Status:
      - DYNAMIC
      CF-Ray:
      - 918c61327e8c67af-SJC
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 28 Feb 2025 00:43:29 GMT
      ETag:
      - W/"736-E4kt46M41unDWm7HK3NCrWDS8Y8"
      Retry-After:
      - '2'
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '1846'
      x-amzn-trace-id:
      - 2a70092b-7806-4568-8225-dcc754b781be-noamzn
      x-api-call-end:
      - '2025-02-28T00:43:29.933Z'
      x-api-call-start:
      - '2025-02-28T00:43:18.863Z'
      x-api-received:
      - '2025-02-28T00:43:18.853Z'
      x-inference-version:
      - v2
      x-ratelimit:
      - 'false'
      x-ratelimit-limit:
      - '10'
      x-ratelimit-limit-tokens:
      - '100000'
      x-ratelimit-remaining:
      - '19'
      x-ratelimit-remaining-tokens:
      - '100000'
      x-ratelimit-reset:
      - '2'
    status:
      code: 200
      message: OK
version: 1
