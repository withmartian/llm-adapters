interactions:
- request:
    body: '{"messages":[{"role":"user","content":"Generate random number with tools
      specified, range 1-10"}],"model":"hermes3-405b","tools":[{"type":"function","function":{"description":"Generate
      random number","name":"generate","parameters":{"type":"object","properties":{"prompt":{"type":"string","description":"Random
      number like 5, 4, 3, 10, 11"}},"required":["prompt"]}}}],"tool_choice":"none"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, br
      connection:
      - keep-alive
      content-length:
      - '388'
      content-type:
      - application/json
      host:
      - api.lambdalabs.com
      user-agent:
      - AsyncOpenAI/Python 1.61.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.61.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.1
    method: POST
    uri: https://api.lambdalabs.com/v1/chat/completions
  response:
    body:
      string: '{"id":"d7c534f841714524803890ec83d3fd91","object":"chat.completion","created":1742237500,"model":"hermes3-405b","choices":[{"index":0,"message":{"role":"assistant","content":"To
        generate a random number between 1 and 10 (inclusive) using the specified
        tools, you can use the following methods:\n\n1. Python:\n```python\nimport
        random\nrandom_number = random.randint(1, 10)\nprint(random_number)\n```\n\n2.
        JavaScript:\n```javascript\nconst randomNumber = Math.floor(Math.random()
        * 10) + 1;\nconsole.log(randomNumber);\n```\n\n3. Excel:\n```\n=RANDBETWEEN(1,
        10)\n```\n\n4. SQL (MySQL):\n```sql\nSELECT FLOOR(RAND() * 10) + 1;\n```\n\n5.
        SQL (PostgreSQL):\n```sql\nSELECT FLOOR(RANDOM() * 10) + 1;\n```\n\n6. PHP:\n```php\n$randomNumber
        = rand(1, 10);\necho $randomNumber;\n```\n\n7. Ruby:\n```ruby\nrandom_number
        = rand(1..10)\nputs random_number\n```\n\n8. R:\n```r\nrandom_number \u003c-
        sample(1:10, 1)\nprint(random_number)\n```\n\n9. Swift:\n```swift\nlet randomNumber
        = Int.random(in: 1...10)\nprint(randomNumber)\n```\n\n10. C#:\n```csharp\nRandom
        random = new Random();\nint randomNumber = random.Next(1, 11);\nConsole.WriteLine(randomNumber);\n```\n\n11.
        Java:\n```java\nimport java.util.Random;\n\nRandom random = new Random();\nint
        randomNumber = random.nextInt(10) + 1;\nSystem.out.println(randomNumber);\n```\n\n12.
        Go:\n```go\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"time\"\n)\n\nfunc
        main() {\n    rand.Seed(time.Now().UnixNano())\n    randomNumber := rand.Intn(10)
        + 1\n    fmt.Println(randomNumber)\n}\n```\n\nThese examples demonstrate how
        to generate a random integer between 1 and 10 (inclusive) using various programming
        languages and tools. Choose the method that suits your needs based on the
        tools you are working with."},"finish_reason":"stop","content_filter_results":{"hate":{"filtered":false},"self_harm":{"filtered":false},"sexual":{"filtered":false},"violence":{"filtered":false},"jailbreak":{"filtered":false,"detected":false},"profanity":{"filtered":false,"detected":false}}}],"usage":{"prompt_tokens":21,"completion_tokens":422,"total_tokens":443,"prompt_tokens_details":null,"completion_tokens_details":null},"system_fingerprint":""}'
    headers:
      cf-cache-status:
      - DYNAMIC
      cf-ray:
      - 921eae829bc9346e-DFW
      content-length:
      - '2176'
      content-type:
      - application/json
      date:
      - Mon, 17 Mar 2025 18:51:40 GMT
      server:
      - cloudflare
      set-cookie:
      - __cf_bm=QiXsxmrMAeifRoSKaV1Rp30yUinx7VtWZ4V7.IByxmw-1742237500-1.0.1.1-2zaxpVupzy0uRIBtpjB5XMDJjtiqNkGddFJUlWwrMAbWhKFk5E4yFWlgNrbFhDJYVrRQ0.DdOMulFe4G3E7I7cMfs0x.tBA.4bSU_MTzISQ;
        path=/; expires=Mon, 17-Mar-25 19:21:40 GMT; domain=.lambdalabs.com; HttpOnly;
        Secure; SameSite=None
      x-request-id:
      - 5742d0f8-b3df-43f6-8a1b-c94a411f670f
      x-response-time:
      - '14.099'
    status:
      code: 200
      message: OK
version: 1
