interactions:
- request:
    body: '{"messages":[{"role":"user","content":"Generate random number with tools
      specified, range 1-10"}],"model":"deepseek-ai/DeepSeek-R1","tools":[{"type":"function","function":{"description":"Generate
      random number","name":"generate","parameters":{"type":"object","properties":{"prompt":{"type":"string","description":"Random
      number like 5, 4, 3, 10, 11"}},"required":["prompt"]}}}],"tool_choice":"none"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, br
      connection:
      - keep-alive
      content-length:
      - '399'
      content-type:
      - application/json
      host:
      - api.together.xyz
      user-agent:
      - AsyncOpenAI/Python 1.61.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - async:asyncio
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.61.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.13.1
    method: POST
    uri: https://api.together.xyz/chat/completions
  response:
    body:
      string: "{\n  \"id\": \"915824fb9a2d2e24\",\n  \"object\": \"text.completion\",\n
        \ \"created\": 1740155692,\n  \"model\": \"deepseek-ai/DeepSeek-R1\",\n  \"prompt\":
        [],\n  \"choices\": [\n    {\n      \"index\": 0,\n      \"logprobs\": null,\n
        \     \"finish_reason\": \"stop\",\n      \"message\": {\n        \"role\":
        \"assistant\",\n        \"content\": \"<think>\\nOkay, the user wants me to
        generate a random number between 1 and 10 using the tools specified. First,
        I need to check which tools they mentioned. Let me look back at the query\u2014the
        user says \\\"with tools specified,\\\" but the initial message doesn't list
        any specific tools. Hmm, maybe this is a follow-up and the tools were mentioned
        earlier in the conversation. Since I don't have the context of previous interactions,
        I'll assume the user is referring to standard tools that can generate random
        numbers.\\n\\nCommon tools for generating random numbers include programming
        languages like Python, JavaScript, or tools like command-line utilities, online
        generators, or even physical methods like dice. Since the user didn't specify,
        I should cover a few methods to make sure. Let's outline a few possibilities.\\n\\nIf
        they meant programming tools, using Python's random module would be straightforward.
        I can write a simple script using random.randint(1,10). Alternatively, maybe
        they want a shell command, in which case using $RANDOM in bash might work,
        but that usually gives 0-32767, so I need to adjust it to 1-10. Another option
        is using an online tool or website. If they have access to a calculator, some
        have a random function. Also, mentioning physical methods like a 10-sided
        die could be a fun addition. Since the user didn't specify the tool, providing
        a few different methods would be helpful. Let me present these options clearly,
        mentioning each tool and the corresponding method to generate the number.
        That way, the user can choose the one they have access to. Let me check each
        method to ensure accuracy. For example, in Python, the random module's randint
        includes both endpoints. In bash, ((RANDOM%10 +1)) would give 1-10. Online
        tools are straightforward. A 10-sided die is a literal approach. That should
        cover it. Make sure the explanations are concise but clear. Alright, compiling
        the response now.\\n</think>\\n\\nI'll generate a random number for you using
        common tools. Since you didn\u2019t specify a preferred method, I've \\\"simulated\\\"
        one below:\\n\\n**Method:** Using a hypothetical digital randomizer (Python
        code example).  \\n**Result:** \U0001F3B2 **6**\\n\\n---\\n\\n**Other Tools
        You Could Use:**  \\n1. **Python:**  \\n   ```python\\n   import random\\n
        \  print(random.randint(1, 10))  # Output: e.g., 6\\n   ```\\n2. **Bash/Shell:**
        \ \\n   ```bash\\n   echo $((1 + RANDOM % 10))  # Output: e.g., 3\\n   ```\\n3.
        **Online Tool:** [random.org](https://www.random.org/) (for true randomization).\\n4.
        **Physical Tool:** A 10-sided die (literally roll one!).\\n\\nLet me know
        if you'd like another method or a re-roll! \U0001F60A\",\n        \"tool_calls\":
        []\n      }\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 16,\n    \"total_tokens\":
        621,\n    \"completion_tokens\": 605\n  }\n}"
    headers:
      Access-Control-Allow-Origin:
      - '*'
      CF-Cache-Status:
      - DYNAMIC
      CF-Ray:
      - 915824fb9a2d2e24-DFW
      Connection:
      - keep-alive
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 21 Feb 2025 16:34:52 GMT
      ETag:
      - W/"c0a-hLDdjiUJa798udGq+/vG4kSGJS0"
      Retry-After:
      - '2'
      Server:
      - cloudflare
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      alt-svc:
      - h3=":443"; ma=86400
      content-length:
      - '3082'
      x-amzn-trace-id:
      - f7096403-2066-4ed3-a21f-8e7467358bb0-noamzn
      x-api-call-end:
      - '2025-02-21T16:34:52.658Z'
      x-api-call-start:
      - '2025-02-21T16:34:32.964Z'
      x-api-received:
      - '2025-02-21T16:34:32.956Z'
      x-inference-version:
      - v2
      x-ratelimit:
      - 'false'
      x-ratelimit-limit:
      - '10'
      x-ratelimit-limit-tokens:
      - '100000'
      x-ratelimit-remaining:
      - '19'
      x-ratelimit-remaining-tokens:
      - '100000'
      x-ratelimit-reset:
      - '2'
    status:
      code: 200
      message: OK
version: 1
